{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { registerMutation } from \"../queries/authQueries\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useRouter } from \"next/router\";\n\nconst Register = () => {\n  const {\n    0: email,\n    1: setEmail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(\"\");\n  const {\n    0: passwordError,\n    1: setPasswordError\n  } = useState(\"\");\n  const {\n    0: alert,\n    1: setAlert\n  } = useState(\"\");\n  const {\n    0: alertTimeOut,\n    1: setAlertTimeOut\n  } = useState();\n  const [register] = useMutation(registerMutation);\n  const {\n    authContext: {\n      isAuth\n    },\n    dispatch: authDispatch\n  } = useContext(AuthContext);\n  const router = useRouter();\n  useEffect(() => {\n    if (isAuth) {\n      router.push(\"/articles\");\n    }\n  }, [isAuth]); // Clear timeout after unmount\n\n  useEffect(() => clearTimeout(alertTimeOut));\n\n  const handleValidateEmail = email => {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(email)) {\n      return setEmailError(\"Email must have @ and .\");\n    } // No error\n\n\n    setEmailError(\"\");\n  };\n\n  const handleValidatePassword = password => {\n    if (password.length < 3) {\n      return setPasswordError(\"Password must have at least 3 chars\");\n    } // No error\n\n\n    setPasswordError(\"\");\n  };\n\n  const showAlert = msg => {\n    setAlert(msg); // Clear alert\n\n    setAlertTimeOut(setTimeout(() => {\n      setAlert(\"\");\n    }, 5000));\n  };\n\n  const handleChange = ({\n    target: {\n      value,\n      name\n    }\n  }) => {\n    switch (name) {\n      case \"email\":\n        handleValidateEmail(value);\n        return setEmail(value);\n\n      case \"password\":\n        handleValidatePassword(value);\n        return setPassword(value);\n\n      default:\n        return null;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      const {\n        data\n      } = await register({\n        variables: {\n          email,\n          password\n        }\n      });\n      authDispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: data.register\n      });\n      console.log(data);\n    } catch (err) {\n      if (err.graphQLErrors) {\n        showAlert(err.graphQLErrors[0].message);\n      } else {\n        console.log(err);\n      }\n    }\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"login-page container\"\n  }, __jsx(\"div\", {\n    className: \"login-page-container\"\n  }, __jsx(\"h1\", {\n    className: \"login-page__title\"\n  }, \"Register\"), __jsx(\"div\", {\n    className: \"login-page__info\"\n  }, \"To begin your journey with the New York Times Articles, please authenticate yourself.\"), __jsx(\"form\", {\n    onSubmit: e => {\n      handleSubmit(e);\n    },\n    className: \"login-page__form\"\n  }, alert ? __jsx(\"div\", {\n    className: \"login-alert\"\n  }, alert, __jsx(\"button\", {\n    onClick: () => setAlert(\"\"),\n    className: \"alert-close\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\"\n  }))) : null, __jsx(\"div\", {\n    className: \"form-control\"\n  }, __jsx(\"div\", {\n    className: `input-error ${emailError ? \"active\" : \"\"}`\n  }, emailError), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"login-form__input\",\n    value: email,\n    onChange: handleChange,\n    placeholder: \"Email...\"\n  })), __jsx(\"div\", {\n    className: \"form-control\"\n  }, __jsx(\"div\", {\n    className: `input-error ${passwordError ? \"active\" : \"\"}`\n  }, passwordError), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    className: \"login-form__input\",\n    onChange: handleChange,\n    placeholder: \"Password...\"\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    disabled: passwordError || emailError ? true : false,\n    className: \"btn btn--submit\",\n    value: \"Create Account\"\n  })))));\n};\n\nexport default Register;","map":null,"metadata":{},"sourceType":"module"}