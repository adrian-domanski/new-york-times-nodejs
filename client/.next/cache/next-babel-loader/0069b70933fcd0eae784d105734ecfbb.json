{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport { ArticleContext } from \"./articleContext\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { getArticlesQuery } from \"../queries/articleQueries\";\nimport { authUserQuery } from \"../queries/authQueries\";\nimport { AuthContext } from \"./authContext\";\n\nvar ContextWrapper = function ContextWrapper(_ref) {\n  var children = _ref.children,\n      contextData = _ref.contextData;\n\n  var _useContext = useContext(ArticleContext),\n      articleDispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(AuthContext),\n      authDispatch = _useContext2.dispatch;\n\n  var _useQuery = useQuery(getArticlesQuery, {\n    skip: true\n  }),\n      getArticles = _useQuery.refetch;\n\n  var _useQuery2 = useQuery(authUserQuery, {\n    skip: true\n  }),\n      authUser = _useQuery2.refetch; // Get all articles\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var _ref2, data;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getArticles());\n\n            case 3:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              articleDispatch({\n                type: \"GET_ARTICLES\",\n                payload: data.articles\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    fetchData();\n  }, []); // Check if local storage has token and try to auth\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var _ref3, data;\n\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!localStorage.getItem(\"token\")) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(authUser({\n                token: localStorage.getItem(\"token\")\n              }));\n\n            case 4:\n              _ref3 = _context2.sent;\n              data = _ref3.data;\n              authDispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: data.authUser\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Initial auth error: \".concat(_context2.t0));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(React.Fragment, null, children);\n};\n\nexport default ContextWrapper;","map":{"version":3,"sources":["C:/SandBox/next-articles/client/context/contextWrapper.js"],"names":["React","useContext","useEffect","ArticleContext","useQuery","getArticlesQuery","authUserQuery","AuthContext","ContextWrapper","children","contextData","articleDispatch","dispatch","authDispatch","skip","getArticles","refetch","authUser","fetchData","data","type","payload","articles","console","log","localStorage","getItem","token"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA+B;AAAA,MAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,oBACdT,UAAU,CAACE,cAAD,CADI;AAAA,MAClCQ,eADkC,eAC5CC,QAD4C;;AAAA,qBAEjBX,UAAU,CAACM,WAAD,CAFO;AAAA,MAElCM,YAFkC,gBAE5CD,QAF4C;;AAAA,kBAGnBR,QAAQ,CAACC,gBAAD,EAAmB;AAAES,IAAAA,IAAI,EAAE;AAAR,GAAnB,CAHW;AAAA,MAGnCC,WAHmC,aAG5CC,OAH4C;;AAAA,mBAItBZ,QAAQ,CAACE,aAAD,EAAgB;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAhB,CAJc;AAAA,MAInCG,QAJmC,cAI5CD,OAJ4C,EAMpD;;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAESH,WAAW,EAFpB;;AAAA;AAAA;AAENI,cAAAA,IAFM,SAENA,IAFM;AAGdR,cAAAA,eAAe,CAAC;AAAES,gBAAAA,IAAI,EAAE,cAAR;AAAwBC,gBAAAA,OAAO,EAAEF,IAAI,CAACG;AAAtC,eAAD,CAAf;AAHc;AAAA;;AAAA;AAAA;AAAA;AAKdC,cAAAA,OAAO,CAACC,GAAR;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAQAN,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT,CAPoD,CAmBpD;;AACAhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS,GAAG,SAAZA,SAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACZO,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAGWT,QAAQ,CAAC;AAC9BU,gBAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB;AADuB,eAAD,CAHnB;;AAAA;AAAA;AAGJP,cAAAA,IAHI,SAGJA,IAHI;AAOZN,cAAAA,YAAY,CAAC;AAAEO,gBAAAA,IAAI,EAAE,cAAR;AAAwBC,gBAAAA,OAAO,EAAEF,IAAI,CAACF;AAAtC,eAAD,CAAZ;AAPY;AAAA;;AAAA;AAAA;AAAA;AASZM,cAAAA,OAAO,CAACC,GAAR;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAaAN,IAAAA,SAAS;AACV,GAfQ,EAeN,EAfM,CAAT;AAiBA,SAAO,4BAAGT,QAAH,CAAP;AACD,CAtCD;;AAwCA,eAAeD,cAAf","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { ArticleContext } from \"./articleContext\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { getArticlesQuery } from \"../queries/articleQueries\";\r\nimport { authUserQuery } from \"../queries/authQueries\";\r\nimport { AuthContext } from \"./authContext\";\r\n\r\nconst ContextWrapper = ({ children, contextData }) => {\r\n  const { dispatch: articleDispatch } = useContext(ArticleContext);\r\n  const { dispatch: authDispatch } = useContext(AuthContext);\r\n  const { refetch: getArticles } = useQuery(getArticlesQuery, { skip: true });\r\n  const { refetch: authUser } = useQuery(authUserQuery, { skip: true });\r\n\r\n  // Get all articles\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await getArticles();\r\n        articleDispatch({ type: \"GET_ARTICLES\", payload: data.articles });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Check if local storage has token and try to auth\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (localStorage.getItem(\"token\")) {\r\n        try {\r\n          const { data } = await authUser({\r\n            token: localStorage.getItem(\"token\")\r\n          });\r\n\r\n          authDispatch({ type: \"AUTH_SUCCESS\", payload: data.authUser });\r\n        } catch (err) {\r\n          console.log(`Initial auth error: ${err}`);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default ContextWrapper;\r\n"]},"metadata":{},"sourceType":"module"}