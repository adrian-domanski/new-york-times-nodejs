{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport { ArticleContext } from \"./articleContext\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { getArticlesQuery } from \"../queries/articleQueries\";\nimport { authUserQuery } from \"../queries/authQueries\";\nimport { AuthContext } from \"./authContext\";\n\nvar ContextWrapper = function ContextWrapper(_ref) {\n  var children = _ref.children,\n      contextData = _ref.contextData;\n\n  var _useContext = useContext(ArticleContext),\n      articleDispatch = _useContext.dispatch;\n\n  var _useContext2 = useContext(AuthContext),\n      authDispatch = _useContext2.dispatch;\n\n  var _useQuery = useQuery(getArticlesQuery, {\n    skip: true\n  }),\n      getArticles = _useQuery.refetch;\n\n  var _useQuery2 = useQuery(authUserQuery, {\n    skip: true\n  }),\n      authUser = _useQuery2.refetch; // Get all articles\n\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var _ref2, data;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getArticles());\n\n            case 3:\n              _ref2 = _context.sent;\n              data = _ref2.data;\n              articleDispatch({\n                type: \"GET_ARTICLES\",\n                payload: data.articles\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]]);\n    };\n\n    fetchData();\n  }, []); // Check if local storage has token and try to auth\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var _ref3, data;\n\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!localStorage.getItem(\"token\")) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(authUser({\n                token: localStorage.getItem(\"token\")\n              }));\n\n            case 4:\n              _ref3 = _context2.sent;\n              data = _ref3.data;\n              authDispatch({\n                type: \"AUTH_SUCCESS\",\n                payload: data.authUser\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(\"Initial auth error: \".concat(_context2.t0));\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 9]]);\n    };\n\n    fetchData();\n  }, []);\n  return __jsx(React.Fragment, null, children);\n};\n\nexport default ContextWrapper;","map":null,"metadata":{},"sourceType":"module"}