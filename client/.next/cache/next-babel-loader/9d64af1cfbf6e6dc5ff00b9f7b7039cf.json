{"ast":null,"code":"var _jsxFileName = \"C:\\\\SandBox\\\\next-articles\\\\client\\\\lib\\\\withApollo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport withApollo from \"next-with-apollo\";\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nexport default withApollo(({\n  initialState\n}) => {\n  const dev = true;\n  console.log(dev);\n  return new ApolloClient({\n    uri: \"http://localhost:5000/graphql\",\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  render: ({\n    Page,\n    props\n  }) => {\n    return __jsx(ApolloProvider, {\n      client: props.apollo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, __jsx(Page, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    })));\n  }\n});","map":{"version":3,"sources":["C:/SandBox/next-articles/client/lib/withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","ApolloProvider","initialState","dev","console","log","uri","cache","restore","render","Page","props","apollo"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,eAAeH,UAAU,CACvB,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAsB;AACpB,QAAMC,GAAG,OAAT;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAO,IAAIJ,YAAJ,CAAiB;AACtBO,IAAAA,GAAG,EAAE,+BADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIP,aAAJ,GAAoBQ,OAApB,CAA4BN,YAAY,IAAI,EAA5C;AAFe,GAAjB,CAAP;AAID,CARsB,EASvB;AACEO,EAAAA,MAAM,EAAE,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAqB;AAC3B,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEA,KAAK,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;AAPH,CATuB,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\r\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nexport default withApollo(\r\n  ({ initialState }) => {\r\n    const dev = process.env.NODE_ENV !== \"production\";\r\n    console.log(dev);\r\n    return new ApolloClient({\r\n      uri: \"http://localhost:5000/graphql\",\r\n      cache: new InMemoryCache().restore(initialState || {})\r\n    });\r\n  },\r\n  {\r\n    render: ({ Page, props }) => {\r\n      return (\r\n        <ApolloProvider client={props.apollo}>\r\n          <Page {...props} />\r\n        </ApolloProvider>\r\n      );\r\n    }\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}