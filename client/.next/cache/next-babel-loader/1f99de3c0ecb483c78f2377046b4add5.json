{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { loginQuery } from \"../queries/authQueries\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useRouter } from \"next/router\";\n\nvar Login = function Login() {\n  var _useState = useState(\"john@gmail.com\"),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(\"john123\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      emailError = _useState3[0],\n      setEmailError = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      passwordError = _useState4[0],\n      setPasswordError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      alert = _useState5[0],\n      setAlert = _useState5[1];\n\n  var _useQuery = useQuery(loginQuery, {\n    skip: true\n  }),\n      login = _useQuery.refetch;\n\n  var _useState6 = useState(),\n      alertTimeOut = _useState6[0],\n      setAlertTimeOut = _useState6[1];\n\n  var _useContext = useContext(AuthContext),\n      isAuth = _useContext.authContext.isAuth,\n      authDispatch = _useContext.dispatch;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (isAuth) {\n      router.push(\"/articles\");\n    }\n  }, [isAuth]); // Clear timeout after unmount\n\n  useEffect(function () {\n    return clearTimeout(alertTimeOut);\n  });\n\n  var handleValidateEmail = function handleValidateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (!re.test(email)) {\n      return setEmailError(\"Email must have @ and .\");\n    } // No error\n\n\n    setEmailError(\"\");\n  };\n\n  var handleValidatePassword = function handleValidatePassword(password) {\n    if (password.length < 3) {\n      return setPasswordError(\"Password must have at least 3 chars\");\n    } // No error\n\n\n    setPasswordError(\"\");\n  };\n\n  var showAlert = function showAlert(msg) {\n    setAlert(msg); // Clear alert\n\n    setAlertTimeOut(setTimeout(function () {\n      setAlert(\"\");\n    }, 5000));\n  };\n\n  var handleChange = function handleChange(_ref) {\n    var _ref$target = _ref.target,\n        value = _ref$target.value,\n        name = _ref$target.name;\n\n    switch (name) {\n      case \"email\":\n        handleValidateEmail(value);\n        return setEmail(value);\n\n      case \"password\":\n        handleValidatePassword(value);\n        return setPassword(value);\n\n      default:\n        return null;\n    }\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    var _ref2, data;\n\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(login({\n              password: password,\n              email: email\n            }));\n\n          case 4:\n            _ref2 = _context.sent;\n            data = _ref2.data;\n            authDispatch({\n              type: \"LOGIN_SUCCESS\",\n              payload: data.login\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n\n            if (_context.t0.graphQLErrors) {\n              showAlert(_context.t0.graphQLErrors[0].message);\n            } else {\n              console.log(_context.t0);\n            }\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]]);\n  };\n\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: \"login-page container\"\n  }, __jsx(\"div\", {\n    className: \"login-page-container\"\n  }, __jsx(\"h1\", {\n    className: \"login-page__title\"\n  }, \"Log in\"), __jsx(\"div\", {\n    className: \"login-page__info\"\n  }, \"To begin your journey with the New York Times Articles, please authenticate yourself.\"), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      handleSubmit(e);\n    },\n    className: \"login-page__form\"\n  }, alert ? __jsx(\"div\", {\n    className: \"login-alert\"\n  }, alert, __jsx(\"button\", {\n    onClick: function onClick() {\n      return setAlert(\"\");\n    },\n    className: \"alert-close\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-times\"\n  }))) : null, __jsx(\"div\", {\n    className: \"form-control\"\n  }, __jsx(\"div\", {\n    className: \"input-error \".concat(emailError ? \"active\" : \"\")\n  }, emailError), __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"login-form__input\",\n    value: email,\n    onChange: handleChange,\n    placeholder: \"Email...\"\n  })), __jsx(\"div\", {\n    className: \"form-control\"\n  }, __jsx(\"div\", {\n    className: \"input-error \".concat(passwordError ? \"active\" : \"\")\n  }, passwordError), __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    className: \"login-form__input\",\n    onChange: handleChange,\n    placeholder: \"Password...\"\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    disabled: passwordError || emailError ? true : false,\n    className: \"btn btn--submit\",\n    value: \"Log In\"\n  })))));\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}